version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: csvprocessor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - PORT=3000
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=csvprocessor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672

  worker:
    build: ./worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - POSTGRES_DB=csvprocessor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_BACKEND_URL=http://localhost:3000

volumes:
  postgres-data:
  rabbitmq-data: